#!meta

{"kernelInfo":{"defaultKernelName":null,"items":[{"name":"csharp","languageName":"C#","aliases":["c#","cs"]},{"name":"fsharp","languageName":"F#","aliases":["f#","fs"]},{"name":"pwsh","languageName":"PowerShell","aliases":["powershell"]},{"name":"javascript","languageName":"JavaScript","aliases":["js"]},{"name":"html","languageName":"HTML"},{"name":"sql","languageName":"SQL"},{"name":"kql","languageName":"KQL"},{"name":"mermaid","languageName":"Mermaid"},{"name":"httpRequest","languageName":"http"},{"name":"value"}]}}

#!markdown

# PowerShell Notebook
> VS Code CShP --> Reload Window \
> VS Code CShP --> Restart Kernel

#!markdown

## Init PBIX Class

#!pwsh

. ./PowerShell-Scripts/pbit.ps1; 
. ./PowerShell-Scripts/git.ps1; 
# $pbx = [pbix]::new($true)
$git = [git]::new(@{_auto=$true; _verbose=$true})

#!pwsh

$pbx | Get-Member 

#!pwsh

$pbx.pbiTools_Launch()

#!pwsh

$pbx.pbiTools_WatchMode()

#!pwsh

$pbx.pbiTools_Build()

#!markdown

## Committing Changes

#!pwsh

$currentUser = git config user.name
$date = Get-Date -Format "yyy-MM-dd"

$commHeaderMessage = 'Main Class refactored: small bugfix (3)'

#Body can be multiline. Make a vivid separator for each of the lines, like '-->'
$commBodyMessage = ` 
'>> Git class -- showBranches() updated
'


$commMsg = "$currentUser [$date]: $commHeaderMessage `n $commBodyMessage"

$commMsg

#!pwsh

$git.Commit($commMsg)
$git.SyncBranch()

#!markdown

## Create New Branch (and switching to it)

#!pwsh

$pbx.git_ShowBranches()

#!pwsh

$pbx.git_SwitchBranch("PS_updates_learning")

#!pwsh

$pbx.git_NewBranch("PS_updates_learning")
