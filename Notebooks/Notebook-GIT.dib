#!meta

{"kernelInfo":{"defaultKernelName":null,"items":[{"name":"csharp","languageName":"C#","aliases":["c#","cs"]},{"name":"fsharp","languageName":"F#","aliases":["f#","fs"]},{"name":"pwsh","languageName":"PowerShell","aliases":["powershell"]},{"name":"javascript","languageName":"JavaScript","aliases":["js"]},{"name":"html","languageName":"HTML"},{"name":"sql","languageName":"SQL"},{"name":"kql","languageName":"KQL"},{"name":"mermaid","languageName":"Mermaid"},{"name":"httpRequest","languageName":"http"},{"name":"value"}]}}

#!markdown

# PowerShell Notebook
> VS Code CShP --> Reload Window \
> VS Code CShP --> Restart Kernel

#!markdown

## Init GIT Class

#!pwsh

# identify ProjectRoot
$projectRoot = ""

 1..10 |  % { $path=(('..\' * $_) + '\ProjectSettings\!ProjectSettings.json'); if (Test-Path $path ) { $projectRoot = (cat $path | ConvertFrom-Json ).projectRoot ; return  }  }  

Write-Host $projectRoot;  

#!pwsh

. $projectRoot/PowerShell-Scripts/git.ps1; 
$git = [git]::new()

$classes = @{"git"=$git; "pbit"=$pbit}

#!markdown

## Committing Changes

#!pwsh

$currentUser = git config user.name
$date = Get-Date -Format "yyy-MM-dd"

$commHeaderMessage = 'Minor Changes'

#Body can be multiline. Make a vivid separator for each of the lines, like '-->'
$commBodyMessage = ` 
'
>> git.config; $PRROFILE
'

$commMsg = "$currentUser [$date]: $commHeaderMessage `n $commBodyMessage"

$commMsg

#!pwsh

$classes.git.Commit($commMsg)
$classes.git.SyncBranch()

#!markdown

## Create New Branch (and switching to it)

#!pwsh

$classes.git.ShowBranches()

#!pwsh

$pbx.git_NewBranch("PS_updates_learning")

#!pwsh

$pbx.git_SwitchBranch("PS_updates_learning")

#!markdown

## Merging to Main

#!pwsh

$   $classes.git.MergeToMain()
